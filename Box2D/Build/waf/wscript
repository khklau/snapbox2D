import os
from waflib.extras.layout import Solution, Product, Component

publicHeaders = [
    ['..', '..', 'Box2D', 'Box2D.h'],
    ['..', '..', 'Box2D', 'Collision', 'b2BroadPhase.h'],
    ['..', '..', 'Box2D', 'Collision', 'b2Collision.h'],
    ['..', '..', 'Box2D', 'Collision', 'b2Distance.h'],
    ['..', '..', 'Box2D', 'Collision', 'b2DynamicTree.h'],
    ['..', '..', 'Box2D', 'Collision', 'b2TimeOfImpact.h'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2ChainShape.h'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2CircleShape.h'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2EdgeShape.h'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2PolygonShape.h'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2Shape.h'],
    ['..', '..', 'Box2D', 'Common', 'b2BlockAllocator.h'],
    ['..', '..', 'Box2D', 'Common', 'b2Draw.h'],
    ['..', '..', 'Box2D', 'Common', 'b2GrowableStack.h'],
    ['..', '..', 'Box2D', 'Common', 'b2Math.h'],
    ['..', '..', 'Box2D', 'Common', 'b2Settings.h'],
    ['..', '..', 'Box2D', 'Common', 'b2StackAllocator.h'],
    ['..', '..', 'Box2D', 'Common', 'b2Timer.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2Body.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2ContactManager.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2Fixture.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2Island.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2TimeStep.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2World.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2WorldCallbacks.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2ChainAndCircleContact.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2ChainAndPolygonContact.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2CircleContact.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2Contact.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2ContactSolver.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2EdgeAndCircleContact.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2EdgeAndPolygonContact.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2PolygonAndCircleContact.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2PolygonContact.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2DistanceJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2FrictionJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2GearJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2Joint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2MotorJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2MouseJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2PrismaticJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2PulleyJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2RevoluteJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2RopeJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2WeldJoint.h'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2WheelJoint.h']]

sourceFiles = [
    ['..', '..', 'Box2D', 'Collision', 'b2BroadPhase.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'b2CollideCircle.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'b2CollideEdge.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'b2CollidePolygon.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'b2Collision.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'b2Distance.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'b2DynamicTree.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'b2TimeOfImpact.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2ChainShape.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2CircleShape.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2EdgeShape.cpp'],
    ['..', '..', 'Box2D', 'Collision', 'Shapes', 'b2PolygonShape.cpp'],
    ['..', '..', 'Box2D', 'Common', 'b2BlockAllocator.cpp'],
    ['..', '..', 'Box2D', 'Common', 'b2Draw.cpp'],
    ['..', '..', 'Box2D', 'Common', 'b2Math.cpp'],
    ['..', '..', 'Box2D', 'Common', 'b2Settings.cpp'],
    ['..', '..', 'Box2D', 'Common', 'b2StackAllocator.cpp'],
    ['..', '..', 'Box2D', 'Common', 'b2Timer.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2Body.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2ContactManager.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2Fixture.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2Island.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2World.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'b2WorldCallbacks.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2ChainAndCircleContact.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2ChainAndPolygonContact.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2CircleContact.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2Contact.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2ContactSolver.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2EdgeAndCircleContact.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2EdgeAndPolygonContact.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2PolygonAndCircleContact.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Contacts', 'b2PolygonContact.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2DistanceJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2FrictionJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2GearJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2Joint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2MotorJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2MouseJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2PrismaticJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2PulleyJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2RevoluteJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2RopeJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2WeldJoint.cpp'],
    ['..', '..', 'Box2D', 'Dynamics', 'Joints', 'b2WheelJoint.cpp']]

def configure(confCtx):
    confCtx.env.component = Component.fromContext(confCtx, 'Box2D', confCtx.env.product)
    confCtx.env.product.addComponent(confCtx.env.component)

def build(buildCtx):
    publishTaskList=[]
    for header in publicHeaders:
	publishTask='publish_%s' % str('_').join(header[2:(len(header))])
	buildCtx(
		name=publishTask,
		rule='cp ${SRC} ${TGT}',
		source=buildCtx.path.find_node(os.path.join(header)),
		target=os.path.join(buildCtx.env.solution.build_tree.includePathFromBuild(buildCtx), os.sep.join(header[2:(len(header))])),
		install_path=os.path.join(buildCtx.env.solution.install_tree.include, os.sep.join(header[2:(len(header))])))
	publishTaskList.append(publishTask)
    buildCtx.shlib(
	    name='shlib_turbo_memory',
	    source=[buildCtx.path.find_node(os.path.join(source)) for source in sourceFiles],
	    target=os.path.join(buildCtx.env.component.build_tree.libPathFromBuild(buildCtx), 'Box2D'),
	    includes=buildCtx.env.component.include_path_list,
	    defines=['SHLIB_BUILD'],
	    cxxflags=buildCtx.env.CXXFLAGS + ['-MMD', '-MP', '-Wno-strict-aliasing'],
	    linkflags=buildCtx.env.LDFLAGS,
	    use=['TURBO_SHLIB'],
	    libpath=buildCtx.env.component.lib_path_list,
	    rpath=buildCtx.env.component.rpath_list,
	    install_path=buildCtx.env.component.install_tree.lib,
	    after=publishTaskList + ['publish_Box2D_Box2D.h'])
    buildCtx.stlib(
	    name='stlib_turbo_memory',
	    source=[buildCtx.path.find_node(source) for source in sourceFiles],
	    target=os.path.join(buildCtx.env.component.build_tree.libPathFromBuild(buildCtx), 'Box2D'),
	    includes=buildCtx.env.component.include_path_list,
	    cxxflags=buildCtx.env.CXXFLAGS + ['-MMD', '-MP', '-Wno-strict-aliasing'],
	    linkflags=buildCtx.env.LDFLAGS,
	    use=['TURBO_STLIB'],
	    libpath=buildCtx.env.component.lib_path_list,
	    install_path=buildCtx.env.component.install_tree.lib,
	    after=publishTaskList + ['publish_Box2D_Box2D.h'])

def install(installCtx):
    installCtx.env.component = installCtx.env.product.getComponent(name(installCtx))
